// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: PicbotEnum.proto

package PicbotEnum

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PicbotProductType int32

const (
	PicbotProductType_PicbotProductType_NONE PicbotProductType = 0
	PicbotProductType_PHOTO                  PicbotProductType = 1
	PicbotProductType_VIDEO                  PicbotProductType = 2
	PicbotProductType_AI_IMAGE_TO_IMAGE      PicbotProductType = 3
)

// Enum value maps for PicbotProductType.
var (
	PicbotProductType_name = map[int32]string{
		0: "PicbotProductType_NONE",
		1: "PHOTO",
		2: "VIDEO",
		3: "AI_IMAGE_TO_IMAGE",
	}
	PicbotProductType_value = map[string]int32{
		"PicbotProductType_NONE": 0,
		"PHOTO":                  1,
		"VIDEO":                  2,
		"AI_IMAGE_TO_IMAGE":      3,
	}
)

func (x PicbotProductType) Enum() *PicbotProductType {
	p := new(PicbotProductType)
	*p = x
	return p
}

func (x PicbotProductType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PicbotProductType) Descriptor() protoreflect.EnumDescriptor {
	return file_PicbotEnum_proto_enumTypes[0].Descriptor()
}

func (PicbotProductType) Type() protoreflect.EnumType {
	return &file_PicbotEnum_proto_enumTypes[0]
}

func (x PicbotProductType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PicbotProductType.Descriptor instead.
func (PicbotProductType) EnumDescriptor() ([]byte, []int) {
	return file_PicbotEnum_proto_rawDescGZIP(), []int{0}
}

type PicbotCommandType int32

const (
	PicbotCommandType_PicbotCommandType_NONE PicbotCommandType = 0
	// send to backend
	PicbotCommandType_REPLY_FROM_PICBOT    PicbotCommandType = 101
	PicbotCommandType_PICBOT_STATE         PicbotCommandType = 102
	PicbotCommandType_ADD_ORDER            PicbotCommandType = 103
	PicbotCommandType_GET_THEME_GROUP_INFO PicbotCommandType = 104
	// send to picbot
	PicbotCommandType_RESTART               PicbotCommandType = 201
	PicbotCommandType_CONTROL_VIDEO         PicbotCommandType = 202
	PicbotCommandType_RECEIVE_CONFIRM       PicbotCommandType = 203
	PicbotCommandType_REPLY_FROM_BACKEND    PicbotCommandType = 204
	PicbotCommandType_IMAGE_TO_IMAGE_RESULT PicbotCommandType = 205
)

// Enum value maps for PicbotCommandType.
var (
	PicbotCommandType_name = map[int32]string{
		0:   "PicbotCommandType_NONE",
		101: "REPLY_FROM_PICBOT",
		102: "PICBOT_STATE",
		103: "ADD_ORDER",
		104: "GET_THEME_GROUP_INFO",
		201: "RESTART",
		202: "CONTROL_VIDEO",
		203: "RECEIVE_CONFIRM",
		204: "REPLY_FROM_BACKEND",
		205: "IMAGE_TO_IMAGE_RESULT",
	}
	PicbotCommandType_value = map[string]int32{
		"PicbotCommandType_NONE": 0,
		"REPLY_FROM_PICBOT":      101,
		"PICBOT_STATE":           102,
		"ADD_ORDER":              103,
		"GET_THEME_GROUP_INFO":   104,
		"RESTART":                201,
		"CONTROL_VIDEO":          202,
		"RECEIVE_CONFIRM":        203,
		"REPLY_FROM_BACKEND":     204,
		"IMAGE_TO_IMAGE_RESULT":  205,
	}
)

func (x PicbotCommandType) Enum() *PicbotCommandType {
	p := new(PicbotCommandType)
	*p = x
	return p
}

func (x PicbotCommandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PicbotCommandType) Descriptor() protoreflect.EnumDescriptor {
	return file_PicbotEnum_proto_enumTypes[1].Descriptor()
}

func (PicbotCommandType) Type() protoreflect.EnumType {
	return &file_PicbotEnum_proto_enumTypes[1]
}

func (x PicbotCommandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PicbotCommandType.Descriptor instead.
func (PicbotCommandType) EnumDescriptor() ([]byte, []int) {
	return file_PicbotEnum_proto_rawDescGZIP(), []int{1}
}

type PicbotProductPageErrorState int32

const (
	PicbotProductPageErrorState_PicbotProductPageErrorState_NONE PicbotProductPageErrorState = 0
	PicbotProductPageErrorState_PENDING                          PicbotProductPageErrorState = 1
	PicbotProductPageErrorState_SOLVED                           PicbotProductPageErrorState = 2
	PicbotProductPageErrorState_UNSOLVED                         PicbotProductPageErrorState = 3
)

// Enum value maps for PicbotProductPageErrorState.
var (
	PicbotProductPageErrorState_name = map[int32]string{
		0: "PicbotProductPageErrorState_NONE",
		1: "PENDING",
		2: "SOLVED",
		3: "UNSOLVED",
	}
	PicbotProductPageErrorState_value = map[string]int32{
		"PicbotProductPageErrorState_NONE": 0,
		"PENDING":                          1,
		"SOLVED":                           2,
		"UNSOLVED":                         3,
	}
)

func (x PicbotProductPageErrorState) Enum() *PicbotProductPageErrorState {
	p := new(PicbotProductPageErrorState)
	*p = x
	return p
}

func (x PicbotProductPageErrorState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PicbotProductPageErrorState) Descriptor() protoreflect.EnumDescriptor {
	return file_PicbotEnum_proto_enumTypes[2].Descriptor()
}

func (PicbotProductPageErrorState) Type() protoreflect.EnumType {
	return &file_PicbotEnum_proto_enumTypes[2]
}

func (x PicbotProductPageErrorState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PicbotProductPageErrorState.Descriptor instead.
func (PicbotProductPageErrorState) EnumDescriptor() ([]byte, []int) {
	return file_PicbotEnum_proto_rawDescGZIP(), []int{2}
}

type PicbotPaymentType int32

const (
	PicbotPaymentType_PicbotPaymentType_NONE PicbotPaymentType = 0
	PicbotPaymentType_QR_CODE                PicbotPaymentType = 1
	PicbotPaymentType_EZ_CARD                PicbotPaymentType = 2
	PicbotPaymentType_LINE_PAY               PicbotPaymentType = 3
	PicbotPaymentType_WE_CHAT                PicbotPaymentType = 4
	PicbotPaymentType_PI                     PicbotPaymentType = 5
	PicbotPaymentType_JKO                    PicbotPaymentType = 6
	PicbotPaymentType_ALI                    PicbotPaymentType = 7
	PicbotPaymentType_FREE                   PicbotPaymentType = 100
)

// Enum value maps for PicbotPaymentType.
var (
	PicbotPaymentType_name = map[int32]string{
		0:   "PicbotPaymentType_NONE",
		1:   "QR_CODE",
		2:   "EZ_CARD",
		3:   "LINE_PAY",
		4:   "WE_CHAT",
		5:   "PI",
		6:   "JKO",
		7:   "ALI",
		100: "FREE",
	}
	PicbotPaymentType_value = map[string]int32{
		"PicbotPaymentType_NONE": 0,
		"QR_CODE":                1,
		"EZ_CARD":                2,
		"LINE_PAY":               3,
		"WE_CHAT":                4,
		"PI":                     5,
		"JKO":                    6,
		"ALI":                    7,
		"FREE":                   100,
	}
)

func (x PicbotPaymentType) Enum() *PicbotPaymentType {
	p := new(PicbotPaymentType)
	*p = x
	return p
}

func (x PicbotPaymentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PicbotPaymentType) Descriptor() protoreflect.EnumDescriptor {
	return file_PicbotEnum_proto_enumTypes[3].Descriptor()
}

func (PicbotPaymentType) Type() protoreflect.EnumType {
	return &file_PicbotEnum_proto_enumTypes[3]
}

func (x PicbotPaymentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PicbotPaymentType.Descriptor instead.
func (PicbotPaymentType) EnumDescriptor() ([]byte, []int) {
	return file_PicbotEnum_proto_rawDescGZIP(), []int{3}
}

type PicbotOrderState int32

const (
	PicbotOrderState_PicbotOrderState_NONE PicbotOrderState = 0
	PicbotOrderState_SUCCESS               PicbotOrderState = 1
	PicbotOrderState_FAIL                  PicbotOrderState = 2
)

// Enum value maps for PicbotOrderState.
var (
	PicbotOrderState_name = map[int32]string{
		0: "PicbotOrderState_NONE",
		1: "SUCCESS",
		2: "FAIL",
	}
	PicbotOrderState_value = map[string]int32{
		"PicbotOrderState_NONE": 0,
		"SUCCESS":               1,
		"FAIL":                  2,
	}
)

func (x PicbotOrderState) Enum() *PicbotOrderState {
	p := new(PicbotOrderState)
	*p = x
	return p
}

func (x PicbotOrderState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PicbotOrderState) Descriptor() protoreflect.EnumDescriptor {
	return file_PicbotEnum_proto_enumTypes[4].Descriptor()
}

func (PicbotOrderState) Type() protoreflect.EnumType {
	return &file_PicbotEnum_proto_enumTypes[4]
}

func (x PicbotOrderState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PicbotOrderState.Descriptor instead.
func (PicbotOrderState) EnumDescriptor() ([]byte, []int) {
	return file_PicbotEnum_proto_rawDescGZIP(), []int{4}
}

type PicbotOrderInvoiceState int32

const (
	PicbotOrderInvoiceState_PicbotOrderInvoiceState_NONE PicbotOrderInvoiceState = 0
	PicbotOrderInvoiceState_INVOICE_PEDDING              PicbotOrderInvoiceState = 1
	PicbotOrderInvoiceState_INVOICE_SUCCESS              PicbotOrderInvoiceState = 2
	PicbotOrderInvoiceState_INVOICE_FAIL                 PicbotOrderInvoiceState = 3
)

// Enum value maps for PicbotOrderInvoiceState.
var (
	PicbotOrderInvoiceState_name = map[int32]string{
		0: "PicbotOrderInvoiceState_NONE",
		1: "INVOICE_PEDDING",
		2: "INVOICE_SUCCESS",
		3: "INVOICE_FAIL",
	}
	PicbotOrderInvoiceState_value = map[string]int32{
		"PicbotOrderInvoiceState_NONE": 0,
		"INVOICE_PEDDING":              1,
		"INVOICE_SUCCESS":              2,
		"INVOICE_FAIL":                 3,
	}
)

func (x PicbotOrderInvoiceState) Enum() *PicbotOrderInvoiceState {
	p := new(PicbotOrderInvoiceState)
	*p = x
	return p
}

func (x PicbotOrderInvoiceState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PicbotOrderInvoiceState) Descriptor() protoreflect.EnumDescriptor {
	return file_PicbotEnum_proto_enumTypes[5].Descriptor()
}

func (PicbotOrderInvoiceState) Type() protoreflect.EnumType {
	return &file_PicbotEnum_proto_enumTypes[5]
}

func (x PicbotOrderInvoiceState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PicbotOrderInvoiceState.Descriptor instead.
func (PicbotOrderInvoiceState) EnumDescriptor() ([]byte, []int) {
	return file_PicbotEnum_proto_rawDescGZIP(), []int{5}
}

type PicbotResourceType int32

const (
	PicbotResourceType_PicbotResource_NONE PicbotResourceType = 0
	PicbotResourceType_FILTER_FRAME        PicbotResourceType = 1
	PicbotResourceType_VISUAL_VIDEO        PicbotResourceType = 2
)

// Enum value maps for PicbotResourceType.
var (
	PicbotResourceType_name = map[int32]string{
		0: "PicbotResource_NONE",
		1: "FILTER_FRAME",
		2: "VISUAL_VIDEO",
	}
	PicbotResourceType_value = map[string]int32{
		"PicbotResource_NONE": 0,
		"FILTER_FRAME":        1,
		"VISUAL_VIDEO":        2,
	}
)

func (x PicbotResourceType) Enum() *PicbotResourceType {
	p := new(PicbotResourceType)
	*p = x
	return p
}

func (x PicbotResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PicbotResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_PicbotEnum_proto_enumTypes[6].Descriptor()
}

func (PicbotResourceType) Type() protoreflect.EnumType {
	return &file_PicbotEnum_proto_enumTypes[6]
}

func (x PicbotResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PicbotResourceType.Descriptor instead.
func (PicbotResourceType) EnumDescriptor() ([]byte, []int) {
	return file_PicbotEnum_proto_rawDescGZIP(), []int{6}
}

type AiState int32

const (
	AiState_AiState_NONE     AiState = 0
	AiState_AI_STATE_PEDDING AiState = 1
	AiState_AI_STATE_SUCCESS AiState = 2
	AiState_AI_STATE_FAIL    AiState = 3
)

// Enum value maps for AiState.
var (
	AiState_name = map[int32]string{
		0: "AiState_NONE",
		1: "AI_STATE_PEDDING",
		2: "AI_STATE_SUCCESS",
		3: "AI_STATE_FAIL",
	}
	AiState_value = map[string]int32{
		"AiState_NONE":     0,
		"AI_STATE_PEDDING": 1,
		"AI_STATE_SUCCESS": 2,
		"AI_STATE_FAIL":    3,
	}
)

func (x AiState) Enum() *AiState {
	p := new(AiState)
	*p = x
	return p
}

func (x AiState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AiState) Descriptor() protoreflect.EnumDescriptor {
	return file_PicbotEnum_proto_enumTypes[7].Descriptor()
}

func (AiState) Type() protoreflect.EnumType {
	return &file_PicbotEnum_proto_enumTypes[7]
}

func (x AiState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AiState.Descriptor instead.
func (AiState) EnumDescriptor() ([]byte, []int) {
	return file_PicbotEnum_proto_rawDescGZIP(), []int{7}
}

type ImageToImageStyle int32

const (
	ImageToImageStyle_ImageToImageStyle_NONE     ImageToImageStyle = 0
	ImageToImageStyle_STUDIO_GHIBLI              ImageToImageStyle = 1
	ImageToImageStyle_FUTURISTIC_RETRO_CYBERPUNK ImageToImageStyle = 2
	ImageToImageStyle_PIXAR_ANIMATION            ImageToImageStyle = 3
)

// Enum value maps for ImageToImageStyle.
var (
	ImageToImageStyle_name = map[int32]string{
		0: "ImageToImageStyle_NONE",
		1: "STUDIO_GHIBLI",
		2: "FUTURISTIC_RETRO_CYBERPUNK",
		3: "PIXAR_ANIMATION",
	}
	ImageToImageStyle_value = map[string]int32{
		"ImageToImageStyle_NONE":     0,
		"STUDIO_GHIBLI":              1,
		"FUTURISTIC_RETRO_CYBERPUNK": 2,
		"PIXAR_ANIMATION":            3,
	}
)

func (x ImageToImageStyle) Enum() *ImageToImageStyle {
	p := new(ImageToImageStyle)
	*p = x
	return p
}

func (x ImageToImageStyle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImageToImageStyle) Descriptor() protoreflect.EnumDescriptor {
	return file_PicbotEnum_proto_enumTypes[8].Descriptor()
}

func (ImageToImageStyle) Type() protoreflect.EnumType {
	return &file_PicbotEnum_proto_enumTypes[8]
}

func (x ImageToImageStyle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImageToImageStyle.Descriptor instead.
func (ImageToImageStyle) EnumDescriptor() ([]byte, []int) {
	return file_PicbotEnum_proto_rawDescGZIP(), []int{8}
}

var File_PicbotEnum_proto protoreflect.FileDescriptor

var file_PicbotEnum_proto_rawDesc = []byte{
	0x0a, 0x10, 0x50, 0x69, 0x63, 0x62, 0x6f, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x50, 0x69, 0x63, 0x62, 0x6f, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x2a, 0x5c,
	0x0a, 0x11, 0x50, 0x69, 0x63, 0x62, 0x6f, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x69, 0x63, 0x62, 0x6f, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x49,
	0x44, 0x45, 0x4f, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x49, 0x5f, 0x49, 0x4d, 0x41, 0x47,
	0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x03, 0x2a, 0xee, 0x01, 0x0a,
	0x11, 0x50, 0x69, 0x63, 0x62, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x69, 0x63, 0x62, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x15,
	0x0a, 0x11, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x50, 0x49, 0x43,
	0x42, 0x4f, 0x54, 0x10, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x49, 0x43, 0x42, 0x4f, 0x54, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x66, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x44, 0x44, 0x5f, 0x4f,
	0x52, 0x44, 0x45, 0x52, 0x10, 0x67, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x45, 0x54, 0x5f, 0x54, 0x48,
	0x45, 0x4d, 0x45, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x68,
	0x12, 0x0c, 0x0a, 0x07, 0x52, 0x45, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0xc9, 0x01, 0x12, 0x12,
	0x0a, 0x0d, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10,
	0xca, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x5f, 0x43, 0x4f,
	0x4e, 0x46, 0x49, 0x52, 0x4d, 0x10, 0xcb, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x52, 0x45, 0x50, 0x4c,
	0x59, 0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x45, 0x4e, 0x44, 0x10, 0xcc,
	0x01, 0x12, 0x1a, 0x0a, 0x15, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x49, 0x4d,
	0x41, 0x47, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x10, 0xcd, 0x01, 0x2a, 0x6a, 0x0a,
	0x1b, 0x50, 0x69, 0x63, 0x62, 0x6f, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x20,
	0x50, 0x69, 0x63, 0x62, 0x6f, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x55,
	0x4e, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x88, 0x01, 0x0a, 0x11, 0x50, 0x69,
	0x63, 0x62, 0x6f, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x16, 0x50, 0x69, 0x63, 0x62, 0x6f, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x51,
	0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x5a, 0x5f, 0x43,
	0x41, 0x52, 0x44, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x50, 0x41,
	0x59, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x10, 0x04,
	0x12, 0x06, 0x0a, 0x02, 0x50, 0x49, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x4b, 0x4f, 0x10,
	0x06, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x49, 0x10, 0x07, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x52,
	0x45, 0x45, 0x10, 0x64, 0x2a, 0x44, 0x0a, 0x10, 0x50, 0x69, 0x63, 0x62, 0x6f, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x69, 0x63, 0x62,
	0x6f, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x02, 0x2a, 0x77, 0x0a, 0x17, 0x50, 0x69,
	0x63, 0x62, 0x6f, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x69, 0x63, 0x62, 0x6f, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x56, 0x4f, 0x49,
	0x43, 0x45, 0x5f, 0x50, 0x45, 0x44, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x49, 0x4e, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x02, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4e, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x10, 0x03, 0x2a, 0x51, 0x0a, 0x12, 0x50, 0x69, 0x63, 0x62, 0x6f, 0x74, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x69, 0x63,
	0x62, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x46, 0x52, 0x41,
	0x4d, 0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x56, 0x49, 0x53, 0x55, 0x41, 0x4c, 0x5f, 0x56,
	0x49, 0x44, 0x45, 0x4f, 0x10, 0x02, 0x2a, 0x5a, 0x0a, 0x07, 0x41, 0x69, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x69, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x49, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x50, 0x45, 0x44, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x49, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12,
	0x11, 0x0a, 0x0d, 0x41, 0x49, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x10, 0x03, 0x2a, 0x77, 0x0a, 0x11, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x55, 0x44, 0x49, 0x4f, 0x5f, 0x47, 0x48,
	0x49, 0x42, 0x4c, 0x49, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x46, 0x55, 0x54, 0x55, 0x52, 0x49,
	0x53, 0x54, 0x49, 0x43, 0x5f, 0x52, 0x45, 0x54, 0x52, 0x4f, 0x5f, 0x43, 0x59, 0x42, 0x45, 0x52,
	0x50, 0x55, 0x4e, 0x4b, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x49, 0x58, 0x41, 0x52, 0x5f,
	0x41, 0x4e, 0x49, 0x4d, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x42, 0x22, 0x5a, 0x20, 0x70,
	0x69, 0x63, 0x62, 0x6f, 0x74, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x50, 0x69, 0x63, 0x62, 0x6f, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_PicbotEnum_proto_rawDescOnce sync.Once
	file_PicbotEnum_proto_rawDescData = file_PicbotEnum_proto_rawDesc
)

func file_PicbotEnum_proto_rawDescGZIP() []byte {
	file_PicbotEnum_proto_rawDescOnce.Do(func() {
		file_PicbotEnum_proto_rawDescData = protoimpl.X.CompressGZIP(file_PicbotEnum_proto_rawDescData)
	})
	return file_PicbotEnum_proto_rawDescData
}

var file_PicbotEnum_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_PicbotEnum_proto_goTypes = []interface{}{
	(PicbotProductType)(0),           // 0: PicbotEnum.PicbotProductType
	(PicbotCommandType)(0),           // 1: PicbotEnum.PicbotCommandType
	(PicbotProductPageErrorState)(0), // 2: PicbotEnum.PicbotProductPageErrorState
	(PicbotPaymentType)(0),           // 3: PicbotEnum.PicbotPaymentType
	(PicbotOrderState)(0),            // 4: PicbotEnum.PicbotOrderState
	(PicbotOrderInvoiceState)(0),     // 5: PicbotEnum.PicbotOrderInvoiceState
	(PicbotResourceType)(0),          // 6: PicbotEnum.PicbotResourceType
	(AiState)(0),                     // 7: PicbotEnum.AiState
	(ImageToImageStyle)(0),           // 8: PicbotEnum.ImageToImageStyle
}
var file_PicbotEnum_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_PicbotEnum_proto_init() }
func file_PicbotEnum_proto_init() {
	if File_PicbotEnum_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_PicbotEnum_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_PicbotEnum_proto_goTypes,
		DependencyIndexes: file_PicbotEnum_proto_depIdxs,
		EnumInfos:         file_PicbotEnum_proto_enumTypes,
	}.Build()
	File_PicbotEnum_proto = out.File
	file_PicbotEnum_proto_rawDesc = nil
	file_PicbotEnum_proto_goTypes = nil
	file_PicbotEnum_proto_depIdxs = nil
}
